msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-07 20:56+0000\n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 3.0.1\n"
"X-Poedit-Basepath: ..\n"
"X-Poedit-SearchPath-0: translation.js\n"

#: translation.js:10 translation.js:434
msgid "Regs"
msgstr "Regs"

#: translation.js:11
msgid "SRegs"
msgstr "SRegs"

#: translation.js:12
msgid "SRegs-ld"
msgstr "SRegs-ld"

#: translation.js:13 translation.js:437
msgid "02-bits"
msgstr "02-bits"

#: translation.js:14 translation.js:438
#, fuzzy
msgid "03-bits"
msgstr "02-bits"

#: translation.js:15 translation.js:439
msgid "04-bits"
msgstr "04-bits"

#: translation.js:16 translation.js:440
#, fuzzy
msgid "05-bits"
msgstr "02-bits"

#: translation.js:17 translation.js:441
#, fuzzy
msgid "06-bits"
msgstr "16-bits"

#: translation.js:18 translation.js:442
#, fuzzy
msgid "07-bits"
msgstr "02-bits"

#: translation.js:19 translation.js:443
msgid "08-bits"
msgstr "08-bits"

#: translation.js:20 translation.js:444
#, fuzzy
msgid "09-bits"
msgstr "02-bits"

#: translation.js:21 translation.js:445
#, fuzzy
msgid "10-bits"
msgstr "02-bits"

#: translation.js:22 translation.js:446
#, fuzzy
msgid "11-bits"
msgstr "02-bits"

#: translation.js:23 translation.js:447
#, fuzzy
msgid "12-bits"
msgstr "02-bits"

#: translation.js:24 translation.js:448
#, fuzzy
msgid "13-bits"
msgstr "02-bits"

#: translation.js:25 translation.js:449
#, fuzzy
msgid "14-bits"
msgstr "04-bits"

#: translation.js:26 translation.js:450
#, fuzzy
msgid "15-bits"
msgstr "02-bits"

#: translation.js:27 translation.js:451
msgid "16-bits"
msgstr "16-bits"

#: translation.js:28 translation.js:452
#, fuzzy
msgid "17-bits"
msgstr "02-bits"

#: translation.js:29 translation.js:453
#, fuzzy
msgid "18-bits"
msgstr "08-bits"

#: translation.js:30 translation.js:454
#, fuzzy
msgid "19-bits"
msgstr "02-bits"

#: translation.js:31 translation.js:455
#, fuzzy
msgid "20-bits"
msgstr "02-bits"

#: translation.js:32 translation.js:456
#, fuzzy
msgid "21-bits"
msgstr "02-bits"

#: translation.js:33 translation.js:457
#, fuzzy
msgid "22-bits"
msgstr "02-bits"

#: translation.js:34 translation.js:458
#, fuzzy
msgid "23-bits"
msgstr "02-bits"

#: translation.js:35 translation.js:459
#, fuzzy
msgid "24-bits"
msgstr "04-bits"

#: translation.js:36 translation.js:460
#, fuzzy
msgid "25-bits"
msgstr "02-bits"

#: translation.js:37 translation.js:461
#, fuzzy
msgid "26-bits"
msgstr "16-bits"

#: translation.js:38 translation.js:462
#, fuzzy
msgid "27-bits"
msgstr "02-bits"

#: translation.js:39 translation.js:463
#, fuzzy
msgid "28-bits"
msgstr "08-bits"

#: translation.js:40 translation.js:464
#, fuzzy
msgid "29-bits"
msgstr "02-bits"

#: translation.js:41 translation.js:465
#, fuzzy
msgid "30-bits"
msgstr "02-bits"

#: translation.js:42 translation.js:466
#, fuzzy
msgid "31-bits"
msgstr "02-bits"

#: translation.js:43 translation.js:467
msgid "32-bits"
msgstr "32-bits"

#: translation.js:44 translation.js:84 translation.js:104 translation.js:128
#: translation.js:172
msgid "Blocks"
msgstr ""

#: translation.js:45
msgid "Reg-rst-verilog"
msgstr ""

#: translation.js:46
msgid ""
"Reg-rst-02-verilog: Two bits Register with load and reset inputs. Verilog "
"implementation"
msgstr ""

#: translation.js:47
msgid "Reg-verilog"
msgstr ""

#: translation.js:48
msgid ""
"Reg-02-verilog: Two bits Register with load input. Verilog implementation"
msgstr ""

#: translation.js:49 translation.js:78 translation.js:80 translation.js:85
#: translation.js:94 translation.js:105 translation.js:129 translation.js:138
#: translation.js:173 translation.js:186 translation.js:472 translation.js:747
msgid "Sys-reg-rst"
msgstr ""

#: translation.js:50
msgid ""
"Sys-reg-rst-02-verilog: Two bits system register with reset. Verilog "
"implementation"
msgstr ""

#: translation.js:51 translation.js:82 translation.js:87 translation.js:98
#: translation.js:100 translation.js:102 translation.js:107 translation.js:114
#: translation.js:116 translation.js:118 translation.js:120 translation.js:122
#: translation.js:124 translation.js:126 translation.js:131 translation.js:142
#: translation.js:144 translation.js:146 translation.js:148 translation.js:150
#: translation.js:152 translation.js:154 translation.js:156 translation.js:158
#: translation.js:160 translation.js:162 translation.js:164 translation.js:166
#: translation.js:168 translation.js:170 translation.js:175 translation.js:470
#: translation.js:723 translation.js:730 translation.js:737 translation.js:746
msgid "Sys-reg"
msgstr ""

#: translation.js:52
msgid "Sys-reg-02: Two bits system register"
msgstr ""

#: translation.js:53 translation.js:177 translation.js:469 translation.js:745
msgid "Reg-rst"
msgstr "Reg-rst"

#: translation.js:54
msgid "Reg-rst-02: Two bits Register with load and reset inputs"
msgstr "Reg-rst-02: Registro de dos bits con entradas de load y reset"

#: translation.js:55
msgid "2-to-1 Multplexer (2-bit channels)"
msgstr ""

#: translation.js:56
msgid "2-to-1 Multplexer (1-bit channels)"
msgstr ""

#: translation.js:57
msgid "OR2: Two bits input OR gate"
msgstr ""

#: translation.js:58
msgid "Two bits input And gate"
msgstr ""

#: translation.js:59
msgid "NOT gate (Verilog implementation)"
msgstr ""

#: translation.js:60
msgid "Bus2-Join-all: Joint two wires into a 2-bits Bus"
msgstr ""

#: translation.js:61
msgid "Bus2-Split-all: Split the 2-bits bus into two wires"
msgstr ""

#: translation.js:62
msgid "Sys-reg-rst-02: Two bits system register with reset"
msgstr ""

#: translation.js:63
msgid "Generic: 2-bits generic constant (0,1,2,3)"
msgstr ""

#: translation.js:64
msgid "Channel A"
msgstr ""

#: translation.js:65
msgid "Channel B"
msgstr ""

#: translation.js:66
msgid "Input"
msgstr ""

#: translation.js:67
msgid "Output"
msgstr ""

#: translation.js:68 translation.js:89 translation.js:109 translation.js:133
#: translation.js:184 translation.js:468 translation.js:514 translation.js:548
#: translation.js:615 translation.js:744
msgid "Reg"
msgstr ""

#: translation.js:69
msgid "Reg-02: Two bits Register with load input"
msgstr ""

#: translation.js:70 translation.js:471
msgid "Sys-reg-dff"
msgstr ""

#: translation.js:71
msgid ""
"Sys-reg-dff-02: Two bits system register implemented directly from two D "
"Flip-Flops"
msgstr ""

#: translation.js:72
msgid ""
"System - D Flip-flop. Capture data every system clock cycle. Verilog "
"implementation"
msgstr ""

#: translation.js:73
msgid "Parameter: Initial value"
msgstr ""

#: translation.js:74
msgid "System clock"
msgstr ""

#: translation.js:75
msgid "Input data"
msgstr ""

#: translation.js:76
msgid ""
"# D Flip-Flop  (system)\n"
"\n"
"It stores the input data that arrives at cycle n  \n"
"Its output is shown in the cycle n+1"
msgstr ""

#: translation.js:77
msgid "Not connected"
msgstr ""

#: translation.js:79
msgid "2-to-1 Multplexer (2-bit channels). Verilog implementation"
msgstr ""

#: translation.js:81
msgid ""
"Sys-reg-rst-03-verilog: Two bits system register with reset. Verilog "
"implementation"
msgstr ""

#: translation.js:83
msgid "Sys-reg-3: 3 bits system register"
msgstr ""

#: translation.js:86
msgid ""
"Sys-reg-rst-04-verilog: Two bits system register with reset. Verilog "
"implementation"
msgstr ""

#: translation.js:88
msgid "Sys-reg-4: 4 bits system register"
msgstr ""

#: translation.js:90
msgid "Reg-4: 4 bits Register with load input"
msgstr ""

#: translation.js:91
msgid "2-to-1 Multplexer (4-bit channels)"
msgstr ""

#: translation.js:92
msgid "Bus4-Join-all: Join all the wires into a 4-bits Bus"
msgstr ""

#: translation.js:93
msgid "Bus4-Split-all: Split the 4-bits bus into its wires"
msgstr ""

#: translation.js:95
#, fuzzy
msgid "Sys-reg-rst-04: Two bits system register with reset"
msgstr "Reg-rst-02: Registro de dos bits con entradas de load y reset"

#: translation.js:96
msgid "2-to-1 Multplexer (4-bit channels). Verilog implementation"
msgstr ""

#: translation.js:97
msgid "Generic: 4-bits generic constant (0-15)"
msgstr ""

#: translation.js:99
msgid "Sys-reg-5: 5 bits system register"
msgstr ""

#: translation.js:101
msgid "Sys-reg-6: 6 bits system register"
msgstr ""

#: translation.js:103
msgid "Sys-reg-7: 7 bits system register"
msgstr ""

#: translation.js:106
#, fuzzy
msgid ""
"Sys-reg-rst-08-verilog: Two bits system register with reset. Verilog "
"implementation"
msgstr "Reg-rst-02: Registro de dos bits con entradas de load y reset"

#: translation.js:108
msgid "Sys-reg-8: 8 bits system register"
msgstr ""

#: translation.js:110
msgid "Reg-8: 8 bits Register with load input"
msgstr ""

#: translation.js:111
msgid "2-to-1 Multplexer (8-bit channels)"
msgstr ""

#: translation.js:112
msgid "Bus8-Join-half: Join the two same halves into an 8-bits Bus"
msgstr ""

#: translation.js:113
msgid "Bus8-Split-half: Split the 8-bits bus into two buses of the same size"
msgstr ""

#: translation.js:115
msgid "Sys-reg-9: 9 bits system register"
msgstr ""

#: translation.js:117
msgid "Sys-reg-10: 10 bits system register"
msgstr ""

#: translation.js:119
msgid "Sys-reg-11: 11 bits system register"
msgstr ""

#: translation.js:121
msgid "Sys-reg-12: 12 bits system register"
msgstr ""

#: translation.js:123
msgid "Sys-reg-13: 13 bits system register"
msgstr ""

#: translation.js:125
msgid "Sys-reg-14: 14 bits system register"
msgstr ""

#: translation.js:127
msgid "Sys-reg-15: 15 bits system register"
msgstr ""

#: translation.js:130
#, fuzzy
msgid ""
"Sys-reg-rst-16-verilog: 16 bits system register with reset. Verilog "
"implementation"
msgstr "Reg-rst-02: Registro de dos bits con entradas de load y reset"

#: translation.js:132
msgid "Sys-reg-16: 16 bits system register"
msgstr ""

#: translation.js:134
msgid "Reg-16: 16 bits Register with load input"
msgstr ""

#: translation.js:135
msgid "2-to-1 Multplexer (16-bit channels)"
msgstr ""

#: translation.js:136
msgid "Bus16-Split-half: Split the 16-bits bus into two buses of the same size"
msgstr ""

#: translation.js:137
msgid "Bus16-Join-half: Join the two same halves into an 16-bits Bus"
msgstr ""

#: translation.js:139
#, fuzzy
msgid "Sys-reg-rst-16: 16 bits system register with reset"
msgstr "Reg-rst-02: Registro de dos bits con entradas de load y reset"

#: translation.js:140
msgid "2-to-1 Multplexer (16-bit channels). Verilog implementation"
msgstr ""

#: translation.js:141
msgid "Generic: 16-bits generic constant"
msgstr ""

#: translation.js:143
msgid "Sys-reg-17: 17 bits system register"
msgstr ""

#: translation.js:145
msgid "Sys-reg-18: 18 bits system register"
msgstr ""

#: translation.js:147
msgid "Sys-reg-19: 19 bits system register"
msgstr ""

#: translation.js:149
msgid "Sys-reg-20: 20 bits system register"
msgstr ""

#: translation.js:151
msgid "Sys-reg-21: 21 bits system register"
msgstr ""

#: translation.js:153
msgid "Sys-reg-22: 22 bits system register"
msgstr ""

#: translation.js:155
msgid "Sys-reg-23: 23 bits system register"
msgstr ""

#: translation.js:157
msgid "Sys-reg-24: 24 bits system register"
msgstr ""

#: translation.js:159
msgid "Sys-reg-25: 25 bits system register"
msgstr ""

#: translation.js:161
msgid "Sys-reg-26: 26 bits system register"
msgstr ""

#: translation.js:163
msgid "Sys-reg-27: 27 bits system register"
msgstr ""

#: translation.js:165
msgid "Sys-reg-28: 28 bits system register"
msgstr ""

#: translation.js:167
msgid "Sys-reg-29: 29 bits system register"
msgstr ""

#: translation.js:169
msgid "Sys-reg-30: 30 bits system register"
msgstr ""

#: translation.js:171
msgid "Sys-reg-31: 31 bits system register"
msgstr ""

#: translation.js:174
#, fuzzy
msgid ""
"Sys-reg-rst-32-verilog: 32 bits system register with reset. Verilog "
"implementation"
msgstr "Reg-rst-02: Registro de dos bits con entradas de load y reset"

#: translation.js:176
msgid "Sys-reg-32: 32 bits system register"
msgstr ""

#: translation.js:178
msgid "Reg-rst-32: 32 bits Register with load and reset inputs"
msgstr ""

#: translation.js:179
msgid "Sys-reg-rst-32: 32 bits system register with reset"
msgstr ""

#: translation.js:180
msgid "2-to-1 Multplexer (32-bit channels)"
msgstr ""

#: translation.js:181
msgid "Bus32-Join-quarter: Join the four buses into an 32-bits Bus"
msgstr ""

#: translation.js:182
msgid "Bus32-Split-quarter: Split the 32-bits bus into four buses of 8 wires"
msgstr ""

#: translation.js:183
msgid "Generic: 32-bits generic constant"
msgstr ""

#: translation.js:185
msgid "Reg-32: 32 bits Register with load input"
msgstr ""

#: translation.js:187
msgid "2-to-1 Multplexer (32-bit channels). Verilog implementation"
msgstr ""

#: translation.js:188 translation.js:189 translation.js:761 translation.js:762
msgid "02-Bits"
msgstr ""

#: translation.js:190 translation.js:237 translation.js:763 translation.js:807
msgid "Left"
msgstr ""

#: translation.js:191 translation.js:238 translation.js:764 translation.js:808
msgid "Right"
msgstr ""

#: translation.js:192 translation.js:219 translation.js:239 translation.js:256
msgid "Verilog"
msgstr "Verilog"

#: translation.js:193 translation.js:766
msgid "SregL-ld-rst"
msgstr ""

#: translation.js:194
msgid ""
"SregL-ld-rst-02: Two bits Shift register to the left with load and reset "
"inputs"
msgstr ""

#: translation.js:195
msgid "SL1: Shift  a 2-bit value one bit left. LSB is filled with "
msgstr ""

#: translation.js:196
msgid ""
"Combinational  \n"
"Shift-right"
msgstr ""

#: translation.js:197 translation.js:765
msgid "SregL-ld"
msgstr ""

#: translation.js:198
msgid "SregL-ld-02: Two bits Shift register to the left with load input"
msgstr ""

#: translation.js:199
msgid ""
"Combinational  \n"
"Shift-left"
msgstr ""

#: translation.js:200 translation.js:768
msgid "Sys-SregL-ld-rst"
msgstr ""

#: translation.js:201
msgid ""
"Sys-SregL-ld-rst-02: Two bits System Shift register to the left, with load "
"and reset"
msgstr ""

#: translation.js:202
msgid ""
"Data to load from the  \n"
"outside"
msgstr ""

#: translation.js:203
msgid "Shifted internal data"
msgstr ""

#: translation.js:204
msgid "Mux-2-1"
msgstr ""

#: translation.js:205
msgid ""
"Selects which data to load  \n"
"into the register:  \n"
"* load=0: Shifted data\n"
"* load=1: External data"
msgstr ""

#: translation.js:206
msgid "Load external data"
msgstr ""

#: translation.js:207
msgid "External data"
msgstr ""

#: translation.js:208
msgid "Serial input"
msgstr ""

#: translation.js:209 translation.js:767
msgid "Sys-SregL-ld"
msgstr ""

#: translation.js:210
msgid "Sys-SregL-ld-02: Two bits System Shift register to the left, with load"
msgstr ""

#: translation.js:211
msgid "SregL-ld-rst-verilog"
msgstr ""

#: translation.js:212
msgid ""
"SregL-ld-rst-02-verilog: Two bits Shift register to the left with load and "
"reset inputs. Verilog implementation"
msgstr ""

#: translation.js:213
msgid "SregL-ld-verilog"
msgstr ""

#: translation.js:214
msgid ""
"SregL-ld-02-verilog: Two bits Shift register to the left with load input. "
"Verilog implementation"
msgstr ""

#: translation.js:215
msgid "Sys-SregL-ld-rst-verilog"
msgstr ""

#: translation.js:216
msgid ""
"Sys-SregL-ld-02-verilog: Two bits System Shift register to the left, with "
"load and reset. Verilog implementation"
msgstr ""

#: translation.js:217
msgid "Sys-SregL-ld-verilog"
msgstr ""

#: translation.js:218
msgid ""
"Sys-SregL-ld-02-verilog: Two bits System Shift register to the left, with "
"load. Verilog implementation"
msgstr ""

#: translation.js:220 translation.js:791
msgid "SregR-ld-rst"
msgstr ""

#: translation.js:221
msgid ""
"SregR-ld-rst-02: Two bits Shift register to the right with load and reset "
"inputs"
msgstr ""

#: translation.js:222
msgid "SR1: Shift  a 2-bit value one bit right. MSB is filled with in"
msgstr ""

#: translation.js:223 translation.js:790
msgid "SregR-ld"
msgstr ""

#: translation.js:224
msgid "SregR-ld-02: Two bits Shift register to the right with load input"
msgstr ""

#: translation.js:225 translation.js:793
msgid "Sys-SregR-ld-rst"
msgstr ""

#: translation.js:226
msgid ""
"Sys-SregR-ld-rst-02: Two bits System Shift register to the right, with reset "
"and load"
msgstr ""

#: translation.js:227 translation.js:792
msgid "Sys-SregR-ld"
msgstr ""

#: translation.js:228
msgid "Sys-SregR-ld-02: Two bits System Shift register to the right, with load"
msgstr ""

#: translation.js:229
msgid "SregR-ld-rst-verilog"
msgstr ""

#: translation.js:230
msgid ""
"SregR-ld-rst-02-verilog: Two bits Shift register to the right with load and "
"reset inputs. Verilog implementation"
msgstr ""

#: translation.js:231
msgid "SregR-ld-verilog"
msgstr ""

#: translation.js:232
msgid ""
"SregR-ld-rst-02-verilog: Two bits Shift register to the right with load "
"input. Verilog implementation"
msgstr ""

#: translation.js:233
msgid "Sys-SregR-ld-rst-verilog"
msgstr ""

#: translation.js:234
msgid ""
"Sys-SregR-ld-rst-02-verilog: Two bits System Shift register to the right, "
"with reset and load. Verilog implementation"
msgstr ""

#: translation.js:235
msgid "Sys-SregR-ld-verilog"
msgstr ""

#: translation.js:236
msgid ""
"Sys-SregR-ld-02-verilog: Two bits System Shift register to the right, with "
"load. Verilog implementation"
msgstr ""

#: translation.js:240 translation.js:810
msgid "SregL-rst"
msgstr ""

#: translation.js:241
msgid "SregL-rst-02: Two bits Shift register to the left, with reset"
msgstr ""

#: translation.js:242 translation.js:809
msgid "SregL"
msgstr ""

#: translation.js:243
msgid "SregL-02: Two bits Shift register to the left"
msgstr ""

#: translation.js:244
msgid "Sys-SregL-rst"
msgstr ""

#: translation.js:245
msgid ""
"Sys-SregL-rst-02: Two bits System Shift register to the left, with reset"
msgstr ""

#: translation.js:246
msgid "Sys-SregL"
msgstr ""

#: translation.js:247
msgid "Sys-SregL-02: Two bits System Shift register to the left"
msgstr ""

#: translation.js:248
msgid "SregL-rst-verilog"
msgstr ""

#: translation.js:249
msgid ""
"SregL-rst-02-verilog: Two bits Shift register to the left, with reset. "
"Verilog implementation"
msgstr ""

#: translation.js:250
msgid "SregL-verilog"
msgstr ""

#: translation.js:251
msgid ""
"SregL-02-verilog: Two bits Shift register to the left. Verilog iplementation"
msgstr ""

#: translation.js:252
msgid "Sys-SregL-rst-verilog"
msgstr ""

#: translation.js:253
msgid ""
"Sys-SregL-rst-02-verilog: Two bits System Shift register to the left, with "
"reset. Verilog implementation"
msgstr ""

#: translation.js:254
msgid "Sys-SregL-verilog"
msgstr ""

#: translation.js:255
msgid ""
"Sys-SregL-02: Two bits System Shift register to the left. Verilog "
"implementation"
msgstr ""

#: translation.js:257 translation.js:826
msgid "SregR-rst"
msgstr ""

#: translation.js:258
msgid "SregR-rst-02: Two bits Shift register to the right, with reset"
msgstr ""

#: translation.js:259 translation.js:825
msgid "SregR"
msgstr ""

#: translation.js:260
msgid "SregR-02: Two bits Shift register to the right"
msgstr ""

#: translation.js:261
msgid "Sys-SregR-rst"
msgstr ""

#: translation.js:262
msgid ""
"Sys-SregR-rst-02: Two bits System Shift register to the right, with reset"
msgstr ""

#: translation.js:263
msgid "Sys-SregR"
msgstr ""

#: translation.js:264
msgid "Sys-SregR-02: Two bits System Shift register to the right"
msgstr ""

#: translation.js:265
msgid "SregR-rst-verilog"
msgstr ""

#: translation.js:266
msgid ""
"SregR-rst-02-verilog: Two bits Shift register to the right, with reset. "
"Verilog implementation"
msgstr ""

#: translation.js:267
msgid "SregR-verilog"
msgstr ""

#: translation.js:268
msgid ""
"SregR-02-verilog: Two bits Shift register to the right. Verilog "
"implementation"
msgstr ""

#: translation.js:269
msgid "Sys-SregR-rst-verilog"
msgstr ""

#: translation.js:270
msgid ""
"Sys-SregR-rst-02-verilog: Two bits System Shift register to the right, with "
"reset. Verilog implementation"
msgstr ""

#: translation.js:271
msgid "Sys-SregR-verilog"
msgstr ""

#: translation.js:272
msgid ""
"Sys-SregR-02-verilog: Two bits System Shift register to the right. Verilog "
"implementation"
msgstr ""

#: translation.js:273
msgid "TESTs"
msgstr ""

#: translation.js:274
msgid "00-Index"
msgstr ""

#: translation.js:275
msgid "System - D Flip-flop. Capture data every system clock cycle"
msgstr ""

#: translation.js:276
msgid "# INDEX: IceRegs Collection"
msgstr ""

#: translation.js:277
msgid "## Regs"
msgstr ""

#: translation.js:278
msgid "### 2-bits"
msgstr ""

#: translation.js:279
msgid "## SRegs"
msgstr ""

#: translation.js:280
msgid "### 3-bits"
msgstr ""

#: translation.js:281
msgid "### 4-bits"
msgstr ""

#: translation.js:282
msgid "### 5-bits"
msgstr ""

#: translation.js:283
msgid "### 6-bits"
msgstr ""

#: translation.js:284
msgid "### 7-bits"
msgstr ""

#: translation.js:285
msgid "### 16-bits"
msgstr ""

#: translation.js:286
msgid "### 8-bits"
msgstr ""

#: translation.js:287
msgid "### 32-bits"
msgstr ""

#: translation.js:288
msgid ""
"Sys-reg-dff  \n"
"(Didactic purposes)"
msgstr ""

#: translation.js:289
msgid "## SRegs-ld"
msgstr ""

#: translation.js:290
#, fuzzy
msgid "### 12-bits"
msgstr "02-bits"

#: translation.js:291
#, fuzzy
msgid "### 20-bits"
msgstr "02-bits"

#: translation.js:292
#, fuzzy
msgid "### 24-bits"
msgstr "02-bits"

#: translation.js:293
#, fuzzy
msgid "### 28-bits"
msgstr "02-bits"

#: translation.js:294
#, fuzzy
msgid "### 31-bits"
msgstr "02-bits"

#: translation.js:295
#, fuzzy
msgid "### 30-bits"
msgstr "02-bits"

#: translation.js:296
#, fuzzy
msgid "### 29-bits"
msgstr "02-bits"

#: translation.js:297
#, fuzzy
msgid "### 27-bits"
msgstr "02-bits"

#: translation.js:298
#, fuzzy
msgid "### 26-bits"
msgstr "02-bits"

#: translation.js:299
#, fuzzy
msgid "### 25-bits"
msgstr "02-bits"

#: translation.js:300
#, fuzzy
msgid "### 23-bits"
msgstr "02-bits"

#: translation.js:301
#, fuzzy
msgid "### 22-bits"
msgstr "02-bits"

#: translation.js:302
#, fuzzy
msgid "### 21-bits"
msgstr "02-bits"

#: translation.js:303
#, fuzzy
msgid "### 19-bits"
msgstr "02-bits"

#: translation.js:304
#, fuzzy
msgid "### 18-bits"
msgstr "02-bits"

#: translation.js:305
#, fuzzy
msgid "### 17-bits"
msgstr "02-bits"

#: translation.js:306
#, fuzzy
msgid "### 15-bits"
msgstr "02-bits"

#: translation.js:307
#, fuzzy
msgid "### 14-bits"
msgstr "02-bits"

#: translation.js:308
#, fuzzy
msgid "### 13-bits"
msgstr "02-bits"

#: translation.js:309
#, fuzzy
msgid "### 11-bits"
msgstr "02-bits"

#: translation.js:310
#, fuzzy
msgid "### 10-bits"
msgstr "02-bits"

#: translation.js:311
#, fuzzy
msgid "### 9-bits"
msgstr "02-bits"

#: translation.js:312
msgid "01-Sys-Regs-two-values"
msgstr ""

#: translation.js:313
msgid "Button-tic: Configurable button that emits a tic when it is pressed"
msgstr ""

#: translation.js:314
msgid ""
"Rising-edge detector. It generates a 1-period pulse (tic) when a rising edge "
"is detected on the input"
msgstr ""

#: translation.js:315
msgid "D Flip-flop (verilog implementation)"
msgstr ""

#: translation.js:316
msgid "Configurable button (pull-up on/off. Not on/off)"
msgstr ""

#: translation.js:317
msgid "FPGA internal pull-up configuration on the input port"
msgstr ""

#: translation.js:318
msgid "Remove the rebound on a mechanical switch"
msgstr ""

#: translation.js:319
msgid "1bit register (implemented in verilog)"
msgstr ""

#: translation.js:320
msgid "16-bits Syscounter with reset"
msgstr ""

#: translation.js:321
msgid "DFF-rst-x16: 16 D flip-flops in paralell with reset"
msgstr ""

#: translation.js:322
msgid "DFF-rst-x04: Three D flip-flops in paralell with reset"
msgstr ""

#: translation.js:323
msgid "DFF-rst-x01: D Flip flop with reset input. When rst=1, the DFF is 0"
msgstr ""

#: translation.js:324
msgid ""
"Bus16-Split-quarter: Split the 16-bits bus into four buses of the same size"
msgstr ""

#: translation.js:325
msgid "Bus16-Join-quarter: Join the four same buses into an 16-bits Bus"
msgstr ""

#: translation.js:326
msgid "Inc1-16bit: Increment a 16-bits number by one"
msgstr ""

#: translation.js:327
msgid "AdderK-16bit: Adder of 16-bit operand and 16-bit constant"
msgstr ""

#: translation.js:328
msgid "Adder-16bits: Adder of two operands of 16 bits"
msgstr ""

#: translation.js:329
msgid "Adder-8bits: Adder of two operands of 8 bits"
msgstr ""

#: translation.js:330
msgid "Adder-4bits: Adder of two operands of 4 bits"
msgstr ""

#: translation.js:331
msgid "Adder-1bit: Adder of two operands of 1 bit"
msgstr ""

#: translation.js:332
msgid "AdderC-1bit: Adder of two operands of 1 bit plus the carry in"
msgstr ""

#: translation.js:333
msgid "XOR gate: two bits input xor gate"
msgstr ""

#: translation.js:334
msgid "Constant bit 0"
msgstr ""

#: translation.js:335
msgid "AdderC-4bits: Adder of two operands of 4 bits and Carry in"
msgstr ""

#: translation.js:336
msgid "AdderC-8bits: Adder of two operands of 8 bits and Carry in"
msgstr ""

#: translation.js:337
msgid ""
"Edges detector. It generates a 1-period pulse (tic) when either a rising "
"edge or a falling edge is detected on the input"
msgstr ""

#: translation.js:338
msgid "Sync 1-bit input with the system clock domain"
msgstr ""

#: translation.js:339
msgid ""
"Select positive or negative logic for the input (0=positive, 1=negative)"
msgstr ""

#: translation.js:340
msgid "1-bit generic constant (0/1)"
msgstr ""

#: translation.js:341
msgid ""
"Data Ledoscope. 2 samples of 2bits data are taken initially, at the system "
"clock rate"
msgstr ""

#: translation.js:342
msgid "Generic component with clk input"
msgstr ""

#: translation.js:343
msgid "Reg: 1-Bit register"
msgstr ""

#: translation.js:344
msgid "2-to-1 Multplexer (1-bit channels). Fippled version"
msgstr ""

#: translation.js:345
msgid ""
"System TFF with toggle input: It toogles on every system cycle if the input "
"is active"
msgstr ""

#: translation.js:346
msgid "RS-FF-set. RS Flip-flop with priority set"
msgstr ""

#: translation.js:347
msgid "Constant bit 1"
msgstr ""

#: translation.js:348
msgid ""
"## Example. Sys-Reg: Two values\n"
"\n"
"This circuit generates two values of 2-bts: 2 and 1. The first value (1)  is "
"generated at cycle 0 and the  \n"
"second value (2) at cycle 1 \n"
"The two captured values can be observed with the Data LEDOscope"
msgstr ""

#: translation.js:349
msgid "Initial value: cycle 0"
msgstr ""

#: translation.js:350
msgid "2-bits Sys-Reg"
msgstr ""

#: translation.js:351
msgid ""
"## Meassure with LEDOSCOPE-data\n"
"\n"
"It stores two samples taken at the first two cycles  \n"
"(cycle 0 and cycle 1)"
msgstr ""

#: translation.js:352
msgid ""
"Select the 2-bit sample to show  \n"
"on the LEDs (sample 0 or sample 1)"
msgstr ""

#: translation.js:353
msgid "Showing the sample 0"
msgstr ""

#: translation.js:354
msgid "Value for cycles >= 1"
msgstr ""

#: translation.js:355
msgid "Button state signal"
msgstr ""

#: translation.js:356
msgid "Tic: button pressed"
msgstr ""

#: translation.js:357
msgid "Rising edge detector"
msgstr ""

#: translation.js:358
msgid "Pull up on/off"
msgstr ""

#: translation.js:359
msgid "Not on/off"
msgstr ""

#: translation.js:360
msgid ""
"## Rising edge detector\n"
"\n"
"It generates a 1-period pulse (tic) when a rising edge is detected on the  \n"
"input signal"
msgstr ""

#: translation.js:361
msgid "Input signal"
msgstr ""

#: translation.js:362
msgid ""
"Current signal  \n"
"state"
msgstr ""

#: translation.js:363
msgid ""
"Signal state in the previous  \n"
"clock cycle"
msgstr ""

#: translation.js:364
msgid ""
"If the current signal is 1 and its value in  \n"
"the previous clock cycle was 0, it means  \n"
"that a rising edge has been detected!  \n"
"The output es 1\n"
"\n"
"In any other case the output is 0"
msgstr ""

#: translation.js:365
msgid ""
"**Delay**: 0 clock cycles \n"
"\n"
"There is no delay between the arrival of a rising edge  \n"
"and its detection"
msgstr ""

#: translation.js:366
msgid ""
"# D Flip-Flop  \n"
"\n"
"It stores the input data that arrives at cycle n  \n"
"Its output is shown in the cycle n+1"
msgstr ""

#: translation.js:367
msgid ""
"Internal pull-up  \n"
"* 0: OFF\n"
"* 1: ON"
msgstr ""

#: translation.js:368
msgid "Synchronization stage"
msgstr ""

#: translation.js:369
msgid ""
"Normalization stage\n"
"\n"
"* 0: Wire\n"
"* 1: signal inverted"
msgstr ""

#: translation.js:370
msgid "Debouncing stage"
msgstr ""

#: translation.js:371
msgid ""
"### Pull-up parameter:\n"
"\n"
"0: No pull-up  \n"
"1: Pull-up activated"
msgstr ""

#: translation.js:372
msgid ""
"Only an FPGA pin can  \n"
"be connected here!!!"
msgstr ""

#: translation.js:373
msgid ""
"The pull-up is connected  \n"
"by default"
msgstr ""

#: translation.js:374
msgid "Edge detector"
msgstr ""

#: translation.js:375
msgid ""
"Whenever there is a change in  \n"
"the input, the counter is started"
msgstr ""

#: translation.js:376
msgid ""
"If the counter reaches it maximum  \n"
"value, the input is considered stable  \n"
"and it is captured"
msgstr ""

#: translation.js:377
msgid ""
"### Time calculation\n"
"\n"
"For CLK=12MHZ, a 16-bit counter reaches its  \n"
"maximum every 2 ** 16 * 1/F = 5.5ms aprox  \n"
"IF more time is needed for debouncing,  \n"
"use a counter with more bits (17, 18...)"
msgstr ""

#: translation.js:378
msgid ""
"## Debouncer  \n"
"\n"
"A value is considered stable when  \n"
"there is no changes during 5.5ms  \n"
"aprox. When a value is stable it is  \n"
"captured on the output flip-flop"
msgstr ""

#: translation.js:379
msgid "Stable output"
msgstr ""

#: translation.js:380
msgid "Counter"
msgstr ""

#: translation.js:381
msgid "Initial value"
msgstr ""

#: translation.js:382
msgid ""
"Reset input: Active high  \n"
"When rst = 1, the DFF is reset to 0"
msgstr ""

#: translation.js:383
msgid "Data input"
msgstr ""

#: translation.js:384
msgid ""
"Initial default  \n"
"value: 0"
msgstr ""

#: translation.js:385
msgid ""
"## Edges detector\n"
"\n"
"It generates a 1-period pulse (tic) when an edge (Rising or falling) is "
"detected on the  \n"
"input signal"
msgstr ""

#: translation.js:386
msgid ""
"The output is 1 if the current value is 1 and the  \n"
"previous 0, or if the current value is 0 and the  \n"
"previous 1\n"
msgstr ""

#: translation.js:387
msgid "In any other case the output is 0"
msgstr ""

#: translation.js:388
msgid ""
"When k=0, it works like a wire  \n"
"(The output is equal to the input)  \n"
"When k=1, it act as a not gate\n"
"(The output is the inverse of the input)"
msgstr ""

#: translation.js:389
msgid ""
"### Truth table for XOR\n"
"\n"
"| k | input | output | function |\n"
"|---|-------|--------|----------|\n"
"| 0 | 0     |  0     | wire     |\n"
"| 0 | 1     |  1     | wire     |\n"
"| 1 | 0     |  1     | Not      |\n"
"| 1 | 1     |  0     | Not      |"
msgstr ""

#: translation.js:390
msgid ""
"Select which sample is shown  \n"
"on the LEDs"
msgstr ""

#: translation.js:391
msgid "Sample 0"
msgstr ""

#: translation.js:392
msgid ""
"The first two samples on the  \n"
"channels are captured  \n"
"(Samples at cycles 0 to 1)"
msgstr ""

#: translation.js:393
msgid "Enable the capture "
msgstr ""

#: translation.js:394
msgid "This signal is 1 initially"
msgstr ""

#: translation.js:395
msgid "RS-flip-flop"
msgstr ""

#: translation.js:396
msgid "Cycle number: 0-1"
msgstr ""

#: translation.js:397
msgid ""
"The Flip-flips is reset  \n"
"at the end of cycle 3"
msgstr ""

#: translation.js:398
msgid "4-cycles with pulse"
msgstr ""

#: translation.js:399
msgid "Sample 1"
msgstr ""

#: translation.js:400
msgid ""
"Sample number currently  \n"
"displayed"
msgstr ""

#: translation.js:401
msgid "Mux 2-1"
msgstr ""

#: translation.js:402
msgid ""
"D Flip-flip\n"
"(System)"
msgstr ""

#: translation.js:403
msgid "Priority on set"
msgstr ""

#: translation.js:404
msgid "02-Sys-Regs-four-values"
msgstr ""

#: translation.js:405
msgid "Generic: 8-bits generic constant (0-255)"
msgstr ""

#: translation.js:406
msgid ""
"Data Ledoscope. 4 samples of 8bits data are taken initially, at the system "
"clock rate"
msgstr ""

#: translation.js:407
msgid "Reg-x08: 8-bits register"
msgstr ""

#: translation.js:408
msgid "Reg-x04: 4-bits register"
msgstr ""

#: translation.js:409
msgid "2-bits Syscounter"
msgstr ""

#: translation.js:410
msgid "Inc1-2bit: Increment a 2-bits number by one"
msgstr ""

#: translation.js:411
msgid "AdderK-2bit: Adder of 2-bit operand and 2-bit constant"
msgstr ""

#: translation.js:412
msgid "Adder-2bits: Adder of two operands of 2 bits"
msgstr ""

#: translation.js:413
msgid "DFF-02: Two D flip-flops in paralell"
msgstr ""

#: translation.js:414
msgid "4-to-1 Multplexer (8-bit channels)"
msgstr ""

#: translation.js:415
msgid "Counter-x02: 2-bits counter"
msgstr ""

#: translation.js:416
msgid "OR-BUS2: OR gate with 2-bits bus input"
msgstr ""

#: translation.js:417
msgid ""
"## Example. Sys-Reg: Four values\n"
"\n"
"This circuit generates four values of 8-bts: 0x80, 0x20, 0x08, and 0x02 in "
"the cycles 0,1,2 and 3 respectivelly\n"
"The four captured values can be observed with the Data LEDOscope block"
msgstr ""

#: translation.js:418
msgid "8-bits Sys-Reg"
msgstr ""

#: translation.js:419
msgid ""
"## Meassure with LEDOSCOPE-data\n"
"\n"
"It stores four samples taken at the first four cycles  \n"
"(cycle 0 - cycle 3)"
msgstr ""

#: translation.js:420
msgid ""
"Select the 8-bit sample to show  \n"
"on the LEDs"
msgstr ""

#: translation.js:421
msgid "Value for cycles >= 3"
msgstr ""

#: translation.js:422
msgid ""
"Show the stable value  \n"
"(permanent regime)"
msgstr ""

#: translation.js:423
msgid ""
"The first four samples on the  \n"
"channels are captured  \n"
"(Samples at cycles 0 to 3)"
msgstr ""

#: translation.js:424
msgid "Cycle number: 0-3"
msgstr ""

#: translation.js:425
msgid "Sample 2"
msgstr ""

#: translation.js:426
msgid "Sample 3"
msgstr ""

#: translation.js:427
msgid "Priority for the set"
msgstr ""

#: translation.js:428
msgid "03-Sys-Regs-rst-two-values"
msgstr ""

#: translation.js:429
msgid ""
"start: Start signal: It goes from 1 to 0 when the system clock starts. 1 "
"cycle pulse witch"
msgstr ""

#: translation.js:430
msgid ""
"## Example 3: Stream of two 8-bit values with reset\n"
"\n"
"A string of two values, 0x55 and 0xAA is generated. Then the register  \n"
"is **reset** to its initial value (0x55) and the sequence is generated again"
msgstr ""

#: translation.js:431
msgid "Initial value: 1"
msgstr ""

#: translation.js:432
msgid "Initial value: 0"
msgstr ""

#: translation.js:433
msgid "Falling edge"
msgstr ""

#: translation.js:435
msgid "SReg"
msgstr ""

#: translation.js:436
msgid "SReg-ld"
msgstr ""

#: translation.js:473 translation.js:474 translation.js:480 translation.js:481
#: translation.js:485 translation.js:493 translation.js:494 translation.js:517
#: translation.js:520 translation.js:521 translation.js:527 translation.js:542
#: translation.js:551 translation.js:554 translation.js:555 translation.js:561
#: translation.js:573 translation.js:580 translation.js:588 translation.js:595
#: translation.js:602 translation.js:609 translation.js:618 translation.js:621
#: translation.js:622 translation.js:628 translation.js:640 translation.js:648
#: translation.js:656 translation.js:664 translation.js:672 translation.js:680
#: translation.js:688 translation.js:696 translation.js:703 translation.js:710
#: translation.js:717 translation.js:724 translation.js:731 translation.js:738
#: translation.js:748 translation.js:749 translation.js:755 translation.js:756
#: translation.js:769 translation.js:770 translation.js:775 translation.js:776
#: translation.js:794 translation.js:795 translation.js:800 translation.js:801
#: translation.js:813 translation.js:814 translation.js:819 translation.js:820
#: translation.js:829 translation.js:830
msgid "Alhambra-II"
msgstr ""

#: translation.js:475 translation.js:478 translation.js:482 translation.js:486
#: translation.js:489 translation.js:495 translation.js:511 translation.js:518
#: translation.js:522 translation.js:524 translation.js:528 translation.js:536
#: translation.js:543 translation.js:552 translation.js:556 translation.js:558
#: translation.js:562 translation.js:574 translation.js:581 translation.js:589
#: translation.js:596 translation.js:603 translation.js:610 translation.js:619
#: translation.js:623 translation.js:625 translation.js:629 translation.js:641
#: translation.js:649 translation.js:657 translation.js:665 translation.js:673
#: translation.js:681 translation.js:689 translation.js:697 translation.js:704
#: translation.js:711 translation.js:718 translation.js:725 translation.js:732
#: translation.js:739 translation.js:750 translation.js:753 translation.js:757
#: translation.js:759 translation.js:771 translation.js:773 translation.js:777
#: translation.js:788 translation.js:796 translation.js:798 translation.js:802
#: translation.js:805 translation.js:815 translation.js:817 translation.js:821
#: translation.js:823 translation.js:831 translation.js:833 translation.js:835
#: translation.js:837
msgid "01-manual-test"
msgstr ""

#: translation.js:476
msgid ""
"# TEST: 2-bits Reg-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:477
msgid "Next"
msgstr ""

#: translation.js:479
msgid ""
"# TEST: 2-bits Reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:483
msgid "2bits constant value: 0"
msgstr ""

#: translation.js:484
msgid ""
"# TEST: 2-bits Sys-reg-dff: Manual testing\n"
"\n"
msgstr ""

#: translation.js:487
msgid "2bits constant value: 3"
msgstr ""

#: translation.js:488
msgid ""
"# TEST: 2-bits Sys-reg-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:490
msgid ""
"# TEST: 2-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:491 translation.js:515 translation.js:526 translation.js:535
#: translation.js:541 translation.js:549 translation.js:560 translation.js:572
#: translation.js:579 translation.js:587 translation.js:594 translation.js:601
#: translation.js:608 translation.js:616 translation.js:627 translation.js:639
#: translation.js:647 translation.js:655 translation.js:663 translation.js:671
#: translation.js:679 translation.js:687 translation.js:695 translation.js:702
#: translation.js:709 translation.js:716
msgid "Sys-Reg"
msgstr ""

#: translation.js:492 translation.js:516 translation.js:617
#, fuzzy
msgid "Sys-Reg-rst"
msgstr "Reg-rst"

#: translation.js:496
msgid ""
"Data Ledoscope. 2 samples of 4bits data are taken initially, at the system "
"clock rate"
msgstr ""

#: translation.js:497
msgid "System TFF: It toogles its output on every system cycle"
msgstr ""

#: translation.js:498
msgid "Counter-x01: 1-bit counter"
msgstr ""

#: translation.js:499
msgid "UINT8-4bits:  Extend a 4-bits unsigned integer to 8-bits "
msgstr ""

#: translation.js:500
msgid "4bits constant value: 0"
msgstr ""

#: translation.js:501
msgid "UINT4-3bit:  Extend a 3-bit unsigned integer to 4-bits "
msgstr ""

#: translation.js:502
msgid "Bus4-Join-1-3: Join the two buses into a 4-bits Bus"
msgstr ""

#: translation.js:503
msgid "3bits constant value: 7"
msgstr ""

#: translation.js:504
msgid "Generic: 3-bits generic constant (0-7)"
msgstr ""

#: translation.js:505
msgid ""
"# TEST: 3-bits Sys-reg-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:506
msgid ""
"The first two samples on the  \n"
"channels are captured  \n"
"(Samples at cycles 0 and 1)"
msgstr ""

#: translation.js:507
msgid "T flip-flop"
msgstr ""

#: translation.js:508
msgid "Cycle number: 0 and 1"
msgstr ""

#: translation.js:509
msgid ""
"The Flip-flips is reset  \n"
"at the end of cycle 1"
msgstr ""

#: translation.js:510
msgid "2-cycles with pulse"
msgstr ""

#: translation.js:512
msgid "Bus4-Split-1-3: Split the 4-bits bus into two: 1-bit and 3-bits buses"
msgstr ""

#: translation.js:513
msgid ""
"# TEST: 3-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:519
msgid ""
"# TEST: 4-bits Reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:523
msgid ""
"# TEST: 4-bits Sys-reg-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:525
msgid ""
"# TEST: 4-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:529
msgid ""
"Data Ledoscope. 2 samples of 8bits data are taken initially, at the system "
"clock rate"
msgstr ""

#: translation.js:530
msgid "Generic: 5-bits generic constant (0-31)"
msgstr ""

#: translation.js:531
msgid "UINT8-5bits:  Extend a 5-bits unsigned integer to 8-bits "
msgstr ""

#: translation.js:532
msgid "Bus8-Join-3-5: Join the two buses into an 8-bits Bus"
msgstr ""

#: translation.js:533
msgid "3bits constant value: 0"
msgstr ""

#: translation.js:534
msgid ""
"# TEST: 5-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:537
msgid "Generic: 6-bits generic constant (0-63)"
msgstr ""

#: translation.js:538
msgid "UINT8-6bits:  Extend a 6-bits unsigned integer to 8-bits "
msgstr ""

#: translation.js:539
msgid "Bus8-Join-2-6: Join the two buses into an 8-bits Bus"
msgstr ""

#: translation.js:540
msgid ""
"# TEST: 6-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:544
msgid "Generic: 7-bits generic constant (0-127)"
msgstr ""

#: translation.js:545
msgid "UINT8-7bits:  Extend a 7-bits unsigned integer to 8-bits "
msgstr ""

#: translation.js:546
msgid "Bus7-Join-1-7: Join the two buses into an 8-bits Bus"
msgstr ""

#: translation.js:547
msgid ""
"# TEST: 7-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:550
#, fuzzy
msgid "Sys-Reg-Rst"
msgstr "Reg-rst"

#: translation.js:553
msgid ""
"# TEST: 8-bits Reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:557
msgid ""
"# TEST: 8-bits Sys-reg-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:559
msgid ""
"# TEST: 8-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:563
msgid ""
"Data Ledoscope. 2 samples of 16bits data are taken initially, at the system "
"clock rate"
msgstr ""

#: translation.js:564
msgid "Reg-x16: 16bits register"
msgstr ""

#: translation.js:565
msgid ""
"Display16-8: Display a 16-bits value on an  8-LEDs. The sel input selects "
"the byte to display "
msgstr ""

#: translation.js:566
msgid "Generic: 9-bits generic constant"
msgstr ""

#: translation.js:567
msgid "UINT16-9bits:  Extend a 9-bits unsigned integer to 16-bits "
msgstr ""

#: translation.js:568
msgid "7bits constant value: 0"
msgstr ""

#: translation.js:569
msgid "Bus16-Join-7-9: Join the two same halves into an 16-bits Bus"
msgstr ""

#: translation.js:570
msgid ""
"# TEST: 9-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:571
msgid ""
"Byte 0  \n"
"(least significant)  "
msgstr ""

#: translation.js:575
msgid "UINT16-10bits:  Extend a 10-bits unsigned integer to 16-bits "
msgstr ""

#: translation.js:576
msgid "6bits constant value: 0"
msgstr ""

#: translation.js:577
msgid "Bus16-Join-6-10: Join the two same halves into an 16-bits Bus"
msgstr ""

#: translation.js:578
msgid ""
"# TEST: 10-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:582
msgid "Generic: 11-bits generic constant"
msgstr ""

#: translation.js:583
msgid "UINT16-11bits:  Extend a 11-bits unsigned integer to 16-bits "
msgstr ""

#: translation.js:584
msgid "Bus16-Join-5-11: Join the two same halves into an 16-bits Bus"
msgstr ""

#: translation.js:585
msgid "5bits constant value: 0"
msgstr ""

#: translation.js:586
msgid ""
"# TEST: 11-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:590
msgid "Generic: 12-bits generic constant (0-4095)"
msgstr ""

#: translation.js:591
msgid "UINT16-12bits:  Extend a 12-bits unsigned integer to 16-bits "
msgstr ""

#: translation.js:592
msgid "Bus16-Join-4-12: Join the two same halves into an 16-bits Bus"
msgstr ""

#: translation.js:593
msgid ""
"# TEST: 12-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:597
msgid "Generic: 13-bits generic constant"
msgstr ""

#: translation.js:598
msgid "UINT16-13bits:  Extend a 13-bits unsigned integer to 16-bits "
msgstr ""

#: translation.js:599
msgid "Bus16-Join-3-13: Join the two same halves into an 16-bits Bus"
msgstr ""

#: translation.js:600
msgid ""
"# TEST: 13-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:604
msgid "Generic: 14-bits generic constant"
msgstr ""

#: translation.js:605
msgid "UINT16-14bits:  Extend a 14-bits unsigned integer to 16-bits "
msgstr ""

#: translation.js:606
msgid "Bus16-Join-2-14: Join the two buses into a 16-bits Bus"
msgstr ""

#: translation.js:607
msgid ""
"# TEST: 14-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:611
msgid "Generic: 15-bits generic constant"
msgstr ""

#: translation.js:612
msgid "UINT16-15bits:  Extend a 12-bits unsigned integer to 16-bits "
msgstr ""

#: translation.js:613
msgid "Bus16-Join-1-15: Join the two buses into a 16-bits Bus"
msgstr ""

#: translation.js:614
msgid ""
"# TEST: 15-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:620
msgid ""
"# TEST: 16-bits Reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:624
msgid ""
"# TEST: 16-bits Sys-reg-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:626
msgid ""
"# TEST: 16-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:630
msgid ""
"Data Ledoscope. 2 samples of 32bits data are taken initially, at the system "
"clock rate"
msgstr ""

#: translation.js:631
msgid "Reg-x32: 32bits register"
msgstr ""

#: translation.js:632
msgid ""
"Display32-8: Display a 32-bits value on an  8-LEDs. The sel input selects "
"the byte to display "
msgstr ""

#: translation.js:633
msgid "Generic: 17-bits generic constant"
msgstr ""

#: translation.js:634
msgid "UINT32-17bits:  Extend a 17-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:635
msgid "Bus32-Join-15-17: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:636
msgid "15bits constant value: 0"
msgstr ""

#: translation.js:637
msgid ""
"# TEST: 17-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:638
msgid ""
"It is 1 if the sample 0 is  \n"
"the current sample"
msgstr ""

#: translation.js:642
msgid "Generic: 18-bits generic constant"
msgstr ""

#: translation.js:643
msgid "UINT32-18bits:  Extend a 18-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:644
msgid "Bus32-Join-14-18: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:645
msgid "14bits constant value: 0"
msgstr ""

#: translation.js:646
msgid ""
"# TEST: 18-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:650
msgid "Generic: 19-bits generic constant"
msgstr ""

#: translation.js:651
msgid "UINT32-19bits:  Extend a 19-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:652
msgid "Bus32-Join-13-19: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:653
msgid "13bits constant value: 0"
msgstr ""

#: translation.js:654
msgid ""
"# TEST: 19-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:658
msgid "Generic: 20-bits generic constant"
msgstr ""

#: translation.js:659
msgid "UINT32-20bits:  Extend a 20-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:660
msgid "Bus32-Join-12-20: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:661
msgid "12bits constant value: 0"
msgstr ""

#: translation.js:662
msgid ""
"# TEST: 20-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:666
msgid "Generic: 21-bits generic constant"
msgstr ""

#: translation.js:667
msgid "UINT32-21bits:  Extend a 21-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:668
msgid "Bus32-Join-11-21: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:669
msgid "11bits constant value: 0"
msgstr ""

#: translation.js:670
msgid ""
"# TEST: 21-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:674
msgid "Generic: 22-bits generic constant"
msgstr ""

#: translation.js:675
msgid "UINT32-22bits:  Extend a 22-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:676
msgid "Bus32-Join-10-22: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:677
msgid "10bits constant value: 0"
msgstr ""

#: translation.js:678
msgid ""
"# TEST: 22-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:682
msgid "Generic: 23-bits generic constant"
msgstr ""

#: translation.js:683
msgid "UINT32-23bits:  Extend a 23-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:684
msgid "Bus32-Join-9-23: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:685
msgid "9bits constant value: 0"
msgstr ""

#: translation.js:686
msgid ""
"# TEST: 23-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:690
msgid "Generic: 24-bits generic constant"
msgstr ""

#: translation.js:691
msgid "UINT32-24bits:  Extend a 24-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:692
msgid "Bus32-Join-8-24: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:693
msgid "8bits constant value: 0"
msgstr ""

#: translation.js:694
msgid ""
"# TEST: 24-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:698
msgid "Generic: 25-bits generic constant"
msgstr ""

#: translation.js:699
msgid "UINT32-25bits:  Extend a 25-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:700
msgid "Bus32-Join-7-25: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:701
msgid ""
"# TEST: 25-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:705
msgid "Generic: 26-bits generic constant"
msgstr ""

#: translation.js:706
msgid "UINT32-26bits:  Extend a 26-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:707
msgid "Bus32-Join-6-26: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:708
msgid ""
"# TEST: 26-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:712
msgid "Generic: 27-bits generic constant"
msgstr ""

#: translation.js:713
msgid "UINT32-27bits:  Extend a 27-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:714
msgid "Bus32-Join-5-27: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:715
msgid ""
"# TEST: 27-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:719
msgid "Generic: 28-bits generic constant"
msgstr ""

#: translation.js:720
msgid "UINT32-28bits:  Extend a 28-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:721
msgid "Bus32-Join-4-28: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:722
msgid ""
"# TEST: 28-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:726
msgid "Generic: 29-bits generic constant"
msgstr ""

#: translation.js:727
msgid "UINT32-29bits:  Extend a 29-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:728
msgid "Bus32-Join-3-29: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:729
msgid ""
"# TEST: 29-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:733
msgid "Generic: 30-bits generic constant"
msgstr ""

#: translation.js:734
msgid "UINT32-30bits:  Extend a 30-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:735
msgid "Bus32-Join-2-30: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:736
msgid ""
"# TEST: 30-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:740
msgid "Generic: 31-bits generic constant"
msgstr ""

#: translation.js:741
msgid "UINT32-31bits:  Extend a 31-bits unsigned integer to 32-bits "
msgstr ""

#: translation.js:742
msgid "Bus32-Join-1-31: Join the two buses into an 32-bits Bus"
msgstr ""

#: translation.js:743
msgid ""
"# TEST: 31-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:751
msgid ""
"Direct connection of a button. The button should not have any external "
"circuit"
msgstr ""

#: translation.js:752
msgid ""
"# TEST: 32-bits Reg-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:754
msgid ""
"# TEST: 32-bits Reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:758
msgid ""
"# TEST: 32-bits Sys-reg-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:760
msgid ""
"# TEST: 32-bits Sys-reg: Manual testing\n"
"\n"
msgstr ""

#: translation.js:772
msgid ""
"# TEST: 2-bits SRegL-ld-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:774
msgid ""
"# TEST: 2-bits SRegL-ld: Manual testing\n"
"\n"
msgstr ""

#: translation.js:778
msgid ""
"Ledoscope. Capture the input signal during the first 4 cycles after circuit "
"initialization"
msgstr ""

#: translation.js:779
msgid "SReg-right-x4: 4 bits Shift register (to the right)"
msgstr ""

#: translation.js:780
msgid ""
"# TEST: 2-bits Sys-SRegL-ld-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:781
msgid "4-bits Shift register"
msgstr ""

#: translation.js:782
msgid ""
"The input channel is captured  \n"
"on the register. One bit per  \n"
"system clock"
msgstr ""

#: translation.js:783
msgid "RS FlipFlop initialized to 1"
msgstr ""

#: translation.js:784
msgid ""
"while 1, the shift register  \n"
"is capturing"
msgstr ""

#: translation.js:785
msgid "2-bits counter"
msgstr ""

#: translation.js:786
msgid ""
"After 4 cycles the Flip-Flop is  \n"
"reset and it stops capturing  \n"
"bits"
msgstr ""

#: translation.js:787
msgid ""
"As the 2-bits system counter is counting  \n"
"all the time, the done signal is only  \n"
"generated when the counter reaches the maximum  \n"
"value and the Ledoscope is on (busy)"
msgstr ""

#: translation.js:789
msgid ""
"# TEST: 2-bits Sys-SRegL-ld: Manual testing\n"
"\n"
msgstr ""

#: translation.js:797
msgid ""
"# TEST: 2-bits SRegR-ld-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:799
msgid ""
"# TEST: 2-bits SRegR-ld: Manual testing\n"
"\n"
msgstr ""

#: translation.js:803
msgid ""
"Sys-SregR-load-02: Two bits System Shift register to the right, with reset "
"and load"
msgstr ""

#: translation.js:804
msgid ""
"# TEST: 2-bits Sys-SRegR-ld-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:806
msgid ""
"# TEST: 2-bits Sys-SRegR-ld: Manual testing\n"
"\n"
msgstr ""

#: translation.js:811
msgid "Sys-sregL"
msgstr ""

#: translation.js:812
msgid "Sys-sregL-rst"
msgstr ""

#: translation.js:816
msgid ""
"# TEST: 2-bits SRegL-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:818
msgid ""
"# TEST: 2-bits SRegL: Manual testing\n"
"\n"
msgstr ""

#: translation.js:822
msgid ""
"# TEST: 2-bits Sys-SRegL-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:824
msgid ""
"# TEST: 2-bits Sys-SRegL: Manual testing\n"
"\n"
msgstr ""

#: translation.js:827
msgid "Sys-sregR"
msgstr ""

#: translation.js:828
msgid "Sys-sregR-rst"
msgstr ""

#: translation.js:832
msgid ""
"# TEST: 2-bits SRegR-rst: Manual testing\n"
"\n"
msgstr ""

#: translation.js:834
msgid ""
"# TEST: 2-bits SRegR: Manual testing\n"
"\n"
msgstr ""

#: translation.js:836
msgid ""
"# TEST: 2-bits Sys-SRegR: Manual testing\n"
"\n"
msgstr ""

#: translation.js:838
msgid ""
"# TEST: 2-bits Sys-SRegR-rst: Manual testing\n"
"\n"
msgstr ""
